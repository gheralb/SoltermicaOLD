// Translated Modelica model generated by Dymola from Modelica model 
//  Soltermica.Acumuladores.Interacumuladores.Ejemplos.Validacion_Interacumulador_02_01


// -----------------------------------------------------------------------------

// Initial Section
  interacumulador_Mezcla_02_1.n := 4;
  interacumulador_Mezcla_02_1.n_int := 2;
  interacumulador_Mezcla_02_1.volumenesControl1D.n := 4;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.n := 2;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.n := 4;
  CaudalEntrada.m := 0.1;
  interacumulador_Mezcla_02_1.medium.rho := 995.6;
  interacumulador_Mezcla_02_1.espec.volumen := 0.08;
  interacumulador_Mezcla_02_1.espec.volumen_int := 0.001445;
  CaudalEntrada.Q_flow := 0;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[4] := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D.puertoInt[1].Q_flow := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D.puertoInt[2].Q_flow := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].Q_flow_int
     := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].puertoInt.Q_flow
     := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].Q_flow_int
     := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].puertoInt.Q_flow
     := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.puertoExt[1].Q_flow := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.puertoExt[2].Q_flow := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].Q_flow_ext
     := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].puertoExt.Q_flow
     := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].Q_flow_ext
     := 0;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].puertoExt.Q_flow
     := 0;
// -----------------------------------------------------------------------------

// Bound Parameter Section
  CaudalEntrada.flowPort_a.medium.rho := CaudalEntrada.medium.rho;
  CaudalEntrada.flowPort_a.medium.cp := CaudalEntrada.medium.cp;
  CaudalEntrada.flowPort_a.medium.cv := CaudalEntrada.medium.cv;
  CaudalEntrada.flowPort_a.medium.lamda := CaudalEntrada.medium.lamda;
  CaudalEntrada.flowPort_a.medium.nue := CaudalEntrada.medium.nue;
  CaudalEntrada.flowPort_b.medium.rho := CaudalEntrada.medium.rho;
  CaudalEntrada.flowPort_b.medium.cp := CaudalEntrada.medium.cp;
  CaudalEntrada.flowPort_b.medium.cv := CaudalEntrada.medium.cv;
  CaudalEntrada.flowPort_b.medium.lamda := CaudalEntrada.medium.lamda;
  CaudalEntrada.flowPort_b.medium.nue := CaudalEntrada.medium.nue;
  ida.flowPort.medium.rho := ida.medium.rho;
  ida.flowPort.medium.cp := ida.medium.cp;
  ida.flowPort.medium.cv := ida.medium.cv;
  ida.flowPort.medium.lamda := ida.medium.lamda;
  ida.flowPort.medium.nue := ida.medium.nue;
  retorno.flowPort.medium.rho := retorno.medium.rho;
  retorno.flowPort.medium.cp := retorno.medium.cp;
  retorno.flowPort.medium.cv := retorno.medium.cv;
  retorno.flowPort.medium.lamda := retorno.medium.lamda;
  retorno.flowPort.medium.nue := retorno.medium.nue;
  red.flowPort.medium.rho := red.medium.rho;
  red.flowPort.medium.cp := red.medium.cp;
  red.flowPort.medium.cv := red.medium.cv;
  red.flowPort.medium.lamda := red.medium.lamda;
  red.flowPort.medium.nue := red.medium.nue;
  trapezoid.T_rising := trapezoid.rising;
  trapezoid.T_width := trapezoid.T_rising+trapezoid.width;
  trapezoid.T_falling := trapezoid.T_width+trapezoid.falling;
  sumidero.flowPort.medium.rho := sumidero.medium.rho;
  sumidero.flowPort.medium.cp := sumidero.medium.cp;
  sumidero.flowPort.medium.cv := sumidero.medium.cv;
  sumidero.flowPort.medium.lamda := sumidero.medium.lamda;
  sumidero.flowPort.medium.nue := sumidero.medium.nue;
  interacumulador_Mezcla_02_1.flowPort_a.medium.rho := interacumulador_Mezcla_02_1.medium.rho;
  interacumulador_Mezcla_02_1.flowPort_a.medium.cp := interacumulador_Mezcla_02_1.medium.cp;
  interacumulador_Mezcla_02_1.flowPort_a.medium.cv := interacumulador_Mezcla_02_1.medium.cv;
  interacumulador_Mezcla_02_1.flowPort_a.medium.lamda := interacumulador_Mezcla_02_1.medium.lamda;
  interacumulador_Mezcla_02_1.flowPort_a.medium.nue := interacumulador_Mezcla_02_1.medium.nue;
  interacumulador_Mezcla_02_1.flowPort_b.medium.rho := interacumulador_Mezcla_02_1.medium.rho;
  interacumulador_Mezcla_02_1.flowPort_b.medium.cp := interacumulador_Mezcla_02_1.medium.cp;
  interacumulador_Mezcla_02_1.flowPort_b.medium.cv := interacumulador_Mezcla_02_1.medium.cv;
  interacumulador_Mezcla_02_1.flowPort_b.medium.lamda := interacumulador_Mezcla_02_1.medium.lamda;
  interacumulador_Mezcla_02_1.flowPort_b.medium.nue := interacumulador_Mezcla_02_1.medium.nue;
  interacumulador_Mezcla_02_1.flowPort_a1.medium.rho := interacumulador_Mezcla_02_1.medium.rho;
  interacumulador_Mezcla_02_1.flowPort_a1.medium.cp := interacumulador_Mezcla_02_1.medium.cp;
  interacumulador_Mezcla_02_1.flowPort_a1.medium.cv := interacumulador_Mezcla_02_1.medium.cv;
  interacumulador_Mezcla_02_1.flowPort_a1.medium.lamda := interacumulador_Mezcla_02_1.medium.lamda;
  interacumulador_Mezcla_02_1.flowPort_a1.medium.nue := interacumulador_Mezcla_02_1.medium.nue;
  interacumulador_Mezcla_02_1.flowPort_b1.medium.rho := interacumulador_Mezcla_02_1.medium.rho;
  interacumulador_Mezcla_02_1.flowPort_b1.medium.cp := interacumulador_Mezcla_02_1.medium.cp;
  interacumulador_Mezcla_02_1.flowPort_b1.medium.cv := interacumulador_Mezcla_02_1.medium.cv;
  interacumulador_Mezcla_02_1.flowPort_b1.medium.lamda := interacumulador_Mezcla_02_1.medium.lamda;
  interacumulador_Mezcla_02_1.flowPort_b1.medium.nue := interacumulador_Mezcla_02_1.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.medium.rho := interacumulador_Mezcla_02_1.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.rho := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.medium.cp := interacumulador_Mezcla_02_1.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.cp := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.medium.cv := interacumulador_Mezcla_02_1.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.cv := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.medium.lamda := 
    interacumulador_Mezcla_02_1.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.lamda := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.medium.nue := interacumulador_Mezcla_02_1.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.nue := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.rho := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.cp := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.cv := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.lamda := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.nue := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumen := interacumulador_Mezcla_02_1.espec.volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D.longitud := interacumulador_Mezcla_02_1.espec.altura;
  interacumulador_Mezcla_02_1.volumenesControl1D.dp_nom := interacumulador_Mezcla_02_1.espec.dp_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D.V_flow_nom := interacumulador_Mezcla_02_1.espec.V_flow_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D.T_ini := interacumulador_Mezcla_02_1.T_ini;
  interacumulador_Mezcla_02_1.transmisionCalor1D[1].U := interacumulador_Mezcla_02_1.espec.U_int;
  interacumulador_Mezcla_02_1.transmisionCalor1D[1].A := 0.5*interacumulador_Mezcla_02_1.espec.S_int;
  interacumulador_Mezcla_02_1.transmisionCalor1D[2].U := interacumulador_Mezcla_02_1.espec.U_int;
  interacumulador_Mezcla_02_1.transmisionCalor1D[2].A := 0.5*interacumulador_Mezcla_02_1.espec.S_int;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.rho := 
    interacumulador_Mezcla_02_1.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.rho := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cp := 
    interacumulador_Mezcla_02_1.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.cp := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cv := 
    interacumulador_Mezcla_02_1.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.cv := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.lamda := 
    interacumulador_Mezcla_02_1.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.lamda := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.nue := 
    interacumulador_Mezcla_02_1.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.nue := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.rho := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.cp := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.cv := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.lamda := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.nue := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumen := interacumulador_Mezcla_02_1.espec.volumen_int;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.longitud := 
    interacumulador_Mezcla_02_1.espec.S_int^2/(12.5663706143592*interacumulador_Mezcla_02_1.espec.volumen_int);
  interacumulador_Mezcla_02_1.volumenesControl1D_int.dp_nom := interacumulador_Mezcla_02_1.espec.dp_nom_int;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.V_flow_nom := 
    interacumulador_Mezcla_02_1.espec.V_flow_nom_int;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.T_ini := interacumulador_Mezcla_02_1.T_ini;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.rho := 
    interacumulador_Mezcla_02_1.medium.rho;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.cp := 
    interacumulador_Mezcla_02_1.medium.cp;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.cv := 
    interacumulador_Mezcla_02_1.medium.cv;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.lamda := 
    interacumulador_Mezcla_02_1.medium.lamda;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.nue := 
    interacumulador_Mezcla_02_1.medium.nue;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen := 
    interacumulador_Mezcla_02_1.espec.volumen;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura := 
    interacumulador_Mezcla_02_1.espec.altura;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cp := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cv := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].Volumen := 
    0.25*interacumulador_Mezcla_02_1.volumenesControl1D.volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].m := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.rho*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].Volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T_ini := 
    interacumulador_Mezcla_02_1.volumenesControl1D.T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T0 := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].dP_nom := 
    interacumulador_Mezcla_02_1.volumenesControl1D.dp_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].cV_nom := 
    interacumulador_Mezcla_02_1.volumenesControl1D.V_flow_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cp := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cv := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].Volumen := 
    0.25*interacumulador_Mezcla_02_1.volumenesControl1D.volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].m := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.rho*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].Volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T_ini := 
    interacumulador_Mezcla_02_1.volumenesControl1D.T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T0 := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].dP_nom := 
    interacumulador_Mezcla_02_1.volumenesControl1D.dp_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].cV_nom := 
    interacumulador_Mezcla_02_1.volumenesControl1D.V_flow_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cp := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cv := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].Volumen := 
    0.25*interacumulador_Mezcla_02_1.volumenesControl1D.volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].m := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.rho*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].Volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T_ini := 
    interacumulador_Mezcla_02_1.volumenesControl1D.T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T0 := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].dP_nom := 
    interacumulador_Mezcla_02_1.volumenesControl1D.dp_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].cV_nom := 
    interacumulador_Mezcla_02_1.volumenesControl1D.V_flow_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cp := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cv := 
    interacumulador_Mezcla_02_1.volumenesControl1D.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].Volumen := 
    0.25*interacumulador_Mezcla_02_1.volumenesControl1D.volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].m := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.rho*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].Volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T_ini := 
    interacumulador_Mezcla_02_1.volumenesControl1D.T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T0 := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].dP_nom := 
    interacumulador_Mezcla_02_1.volumenesControl1D.dp_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].cV_nom := 
    interacumulador_Mezcla_02_1.volumenesControl1D.V_flow_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].Volumen
     := 0.5*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].m := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.rho
    *interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].Volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T_ini := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T0 := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].dP_nom
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.dp_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].cV_nom
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.V_flow_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].Volumen
     := 0.5*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].m := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.rho
    *interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].Volumen;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T_ini := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T0 := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.rho
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.rho;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.cp
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.cv
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cv;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.lamda
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.lamda;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.nue
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.nue;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].dP_nom
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.dp_nom;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].cV_nom
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.V_flow_nom;

  // Nonlinear system of equations
    // It depends on the following parameters: 
    //   interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].cV_nom
    //   interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].dP_nom
    //   interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].cV_nom
    //   interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].dP_nom
    //   interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].cV_nom
    //   interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].dP_nom
    //   interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].cV_nom
    //   interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].dP_nom
    //   red.p_Ambient
    //   sumidero.p_Ambient
    // Unknowns[1]: 
    //   interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
      (start = 0)
  algorithm // Torn part
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].dp :=  -
      interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].dP_nom*
      interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
      ^2/(995.6*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].cV_nom)
      ^2;
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].dp :=  -
      interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].dP_nom*
      interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
      ^2/(995.6*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].cV_nom)
      ^2;
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].dp :=  -
      interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].dP_nom*
      interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
      ^2/(995.6*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].cV_nom)
      ^2;
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.p
       := sumidero.p_Ambient-interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].dp;
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.p
       := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.p
      -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].dp;
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.p
       := interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.p
      -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].dp;
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].dp := 
      interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.p
      -red.p_Ambient;

  equation // Residual equations
    0 = interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].dp+
      interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].dP_nom*
      interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
      ^2/(995.6*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].cV_nom)
      ^2;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  red.h := red.medium.cp*red.T_Ambient;
  retorno.h := retorno.medium.cp*retorno.T_Ambient;
  ida.h := ida.medium.cp*ida.T_Ambient;
  sumidero.h := sumidero.medium.cp*sumidero.T_Ambient;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].V_flow := 
    0.00100441944556047*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].V_flow := 
    0.00100441944556047*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].V_flow := 
    0.00100441944556047*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].V_flow := 
    0.00100441944556047*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow;
// -----------------------------------------------------------------------------

// Initial Section
  trapezoid.T0 := trapezoid.startTime;
  trapezoid.counter := trapezoid.nperiod;
  trapezoid.counter2 := trapezoid.nperiod;
  CaudalEntrada.T := CaudalEntrada.T0;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T_ini;
  trapezoid.T0_.start := trapezoid.T0;
  trapezoid.counter2_.start := trapezoid.counter2;
  trapezoid.counter_.start := trapezoid.counter;
  trapezoid.T0_.start := trapezoid.startTime;
  trapezoid.T0 := trapezoid.T0_.start;
  CaudalEntrada.T := CaudalEntrada.T0;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T_ini;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T_ini;
  trapezoid.counter2_.start := trapezoid.nperiod;
  trapezoid.counter2 := trapezoid.counter2_.start;
  trapezoid.counter_.start := trapezoid.nperiod;
  trapezoid.counter := trapezoid.counter_.start;
  assert(abs(ida.flowPort.medium.cp-CaudalEntrada.flowPort_a.medium.cp) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(ida.flowPort.medium.cv-CaudalEntrada.flowPort_a.medium.cv) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(ida.flowPort.medium.lamda-CaudalEntrada.flowPort_a.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(ida.flowPort.medium.nue-CaudalEntrada.flowPort_a.medium.nue) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(ida.flowPort.medium.rho-CaudalEntrada.flowPort_a.medium.rho) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.flowPort_a1.medium.cp-CaudalEntrada.flowPort_b.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.flowPort_a1.medium.cv-CaudalEntrada.flowPort_b.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.flowPort_a1.medium.lamda-
    CaudalEntrada.flowPort_b.medium.lamda) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.flowPort_a1.medium.nue-CaudalEntrada.flowPort_b.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.flowPort_a1.medium.rho-CaudalEntrada.flowPort_b.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.cp
    -interacumulador_Mezcla_02_1.flowPort_a.medium.cp) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(red.flowPort.medium.cp-interacumulador_Mezcla_02_1.flowPort_a.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.cv
    -interacumulador_Mezcla_02_1.flowPort_a.medium.cv) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(red.flowPort.medium.cv-interacumulador_Mezcla_02_1.flowPort_a.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.lamda
    -interacumulador_Mezcla_02_1.flowPort_a.medium.lamda) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(red.flowPort.medium.lamda-interacumulador_Mezcla_02_1.flowPort_a.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.nue
    -interacumulador_Mezcla_02_1.flowPort_a.medium.nue) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(red.flowPort.medium.nue-interacumulador_Mezcla_02_1.flowPort_a.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.rho
    -interacumulador_Mezcla_02_1.flowPort_a.medium.rho) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(red.flowPort.medium.rho-interacumulador_Mezcla_02_1.flowPort_a.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.cp
    -interacumulador_Mezcla_02_1.flowPort_a1.medium.cp) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.cv
    -interacumulador_Mezcla_02_1.flowPort_a1.medium.cv) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.lamda
    -interacumulador_Mezcla_02_1.flowPort_a1.medium.lamda) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.nue
    -interacumulador_Mezcla_02_1.flowPort_a1.medium.nue) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.rho
    -interacumulador_Mezcla_02_1.flowPort_a1.medium.rho) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.cp
    -interacumulador_Mezcla_02_1.flowPort_b.medium.cp) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(sumidero.flowPort.medium.cp-interacumulador_Mezcla_02_1.flowPort_b.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.cv
    -interacumulador_Mezcla_02_1.flowPort_b.medium.cv) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(sumidero.flowPort.medium.cv-interacumulador_Mezcla_02_1.flowPort_b.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.lamda
    -interacumulador_Mezcla_02_1.flowPort_b.medium.lamda) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(sumidero.flowPort.medium.lamda-interacumulador_Mezcla_02_1.flowPort_b.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.nue
    -interacumulador_Mezcla_02_1.flowPort_b.medium.nue) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(sumidero.flowPort.medium.nue-interacumulador_Mezcla_02_1.flowPort_b.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.rho
    -interacumulador_Mezcla_02_1.flowPort_b.medium.rho) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(sumidero.flowPort.medium.rho-interacumulador_Mezcla_02_1.flowPort_b.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.cp
    -interacumulador_Mezcla_02_1.flowPort_b1.medium.cp) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(retorno.flowPort.medium.cp-interacumulador_Mezcla_02_1.flowPort_b1.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.cv
    -interacumulador_Mezcla_02_1.flowPort_b1.medium.cv) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(retorno.flowPort.medium.cv-interacumulador_Mezcla_02_1.flowPort_b1.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.lamda
    -interacumulador_Mezcla_02_1.flowPort_b1.medium.lamda) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(retorno.flowPort.medium.lamda-interacumulador_Mezcla_02_1.flowPort_b1.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.nue
    -interacumulador_Mezcla_02_1.flowPort_b1.medium.nue) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(retorno.flowPort.medium.nue-interacumulador_Mezcla_02_1.flowPort_b1.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.rho
    -interacumulador_Mezcla_02_1.flowPort_b1.medium.rho) <= 0, "Parameters in connected connectors must be equal");
  assert(abs(retorno.flowPort.medium.rho-interacumulador_Mezcla_02_1.flowPort_b1.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.cp
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.cp) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.cv
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.cv) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.lamda
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.lamda) <= 0,
     "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.nue
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.nue) <= 0,
     "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.medium.rho
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_a.medium.rho) <= 0,
     "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.cp
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.cp) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.cv
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.cv) <= 0, 
    "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.lamda
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.lamda) <= 0,
     "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.nue
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.nue) <= 0,
     "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.medium.rho
    -interacumulador_Mezcla_02_1.volumenesControl1D.flowPort_b.medium.rho) <= 0,
     "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.cp
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.cv
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.lamda
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.nue
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.medium.rho
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.cp
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.cv
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.lamda
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.nue
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.medium.rho
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.cp
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.cv
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.lamda
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.nue
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.medium.rho
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.cp
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.cv
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.lamda
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.nue
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.medium.rho
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_a.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.cp
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.cv
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.lamda
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.nue
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.medium.rho
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.flowPort_b.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.cp
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.cp)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.cv
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.cv)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.lamda
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.lamda)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.nue
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.nue)
     <= 0, "Parameters in connected connectors must be equal");
  assert(abs(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.medium.rho
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.medium.rho)
     <= 0, "Parameters in connected connectors must be equal");


// -----------------------------------------------------------------------------

// Dynamics Section
  when pre(trapezoid.counter2) <> 0 and sample(trapezoid.startTime, 
    trapezoid.period) then
    trapezoid.counter2 := pre(trapezoid.counter);
  end when;
  when pre(trapezoid.counter2) <> 0 and sample(trapezoid.startTime, 
    trapezoid.period) then
    trapezoid.T0 := time;
  end when;
  CaudalEntrada.V_flow := trapezoid.offset+(if time < trapezoid.startTime or 
    trapezoid.counter2 == 0 or time >= trapezoid.T0+trapezoid.T_falling then 0
     else (if time < trapezoid.T0+trapezoid.T_rising then (time-trapezoid.T0)*
    trapezoid.amplitude/trapezoid.T_rising else (if time < trapezoid.T0+
    trapezoid.T_width then trapezoid.amplitude else (trapezoid.T0+
    trapezoid.T_falling-time)*trapezoid.amplitude/(trapezoid.T_falling-
    trapezoid.T_width))));

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
        /CaudalEntrada.medium.rho =  -CaudalEntrada.V_flow;
      */
      interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
         := CaudalEntrada.V_flow*CaudalEntrada.medium.rho;

    // Torn part
  // End of linear system of equations
  CaudalEntrada.h := CaudalEntrada.medium.cp*CaudalEntrada.T;
  CaudalEntrada.flowPort_a.H_flow := (if semiLinearCondition(noEvent(
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     >= 0)) then ida.h*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     else CaudalEntrada.h*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow);
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].h := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cp
    *interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T;
  CaudalEntrada.flowPort_b.H_flow := (if semiLinearCondition(noEvent( -
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     >= 0)) then  -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].h
    *interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     else  -CaudalEntrada.h*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow);

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      (-0.1)*CaudalEntrada.medium.cv*der(CaudalEntrada.T) =  -(CaudalEntrada.flowPort_a.H_flow
        +CaudalEntrada.flowPort_b.H_flow);
      */
      der(CaudalEntrada.T) :=  -(CaudalEntrada.flowPort_a.H_flow+
        CaudalEntrada.flowPort_b.H_flow)/((-0.1)*CaudalEntrada.medium.cv);

    // Torn part
  // End of linear system of equations
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].h := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cp
    *interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.H_flow
     := (if semiLinearCondition(noEvent( -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     >= 0)) then  -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].h
    *interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     else  -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].h
    *interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow);
  interacumulador_Mezcla_02_1.transmisionCalor1D[1].dT := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T;
  interacumulador_Mezcla_02_1.transmisionCalor1D[1].Q_flow := interacumulador_Mezcla_02_1.transmisionCalor1D[1].A
    *interacumulador_Mezcla_02_1.transmisionCalor1D[1].U*interacumulador_Mezcla_02_1.transmisionCalor1D[1].dT;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      (-0.719321)*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cv
        *der(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T)
         = interacumulador_Mezcla_02_1.transmisionCalor1D[1].Q_flow-
        interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.H_flow
        +CaudalEntrada.flowPort_b.H_flow;
      */
      der(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T)
         := (interacumulador_Mezcla_02_1.transmisionCalor1D[1].Q_flow-
        interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.H_flow
        +CaudalEntrada.flowPort_b.H_flow)/((-0.719321)*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cv);

    // Torn part
  // End of linear system of equations
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.H_flow
     := (if semiLinearCondition(noEvent( -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     >= 0)) then  -retorno.h*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     else  -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].h
    *interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow);
  interacumulador_Mezcla_02_1.transmisionCalor1D[2].dT := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T;
  interacumulador_Mezcla_02_1.transmisionCalor1D[2].Q_flow := interacumulador_Mezcla_02_1.transmisionCalor1D[2].A
    *interacumulador_Mezcla_02_1.transmisionCalor1D[2].U*interacumulador_Mezcla_02_1.transmisionCalor1D[2].dT;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      (-0.719321)*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cv
        *der(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T)
         = interacumulador_Mezcla_02_1.transmisionCalor1D[2].Q_flow-
        interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.H_flow;
      */
      der(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T)
         := (interacumulador_Mezcla_02_1.transmisionCalor1D[2].Q_flow-
        interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_b.H_flow)
        /((-0.719321)*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cv);

    // Torn part
  // End of linear system of equations
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].h := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cp*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.H_flow
     := (if semiLinearCondition( -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     >= 0) then  -red.h*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     else  -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].h*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow);
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].h := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cp*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.H_flow
     := (if semiLinearCondition( -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     >= 0) then  -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].h
    *interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     else  -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].h*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow);
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_cond[4] := 4*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.lamda*(
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T)/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[3] := 
    noEvent((if interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T > 0
     then interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.cp*(0.5*(
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T+
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T)-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T)/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.cteTiempo else 0));
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_neto[4] := 
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_cond[4]-
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[3];
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].Q_flow := 
    interacumulador_Mezcla_02_1.transmisionCalor1D[2].Q_flow+interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_neto[4];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      (-19.912)*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cv
        *der(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T)
         =  -(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.H_flow
        -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].Q_flow);
      */
      der(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T)
         :=  -(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_b.H_flow
        -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].Q_flow)
        /((-19.912)*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cv);

    // Torn part
  // End of linear system of equations
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].h := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cp*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.H_flow
     := (if semiLinearCondition( -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     >= 0) then  -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].h
    *interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     else  -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].h*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow);
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_cond[3] := 4*(
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.lamda*(
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T)+
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.lamda*(
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T))/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[2] := 
    noEvent((if interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T > 0
     then interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.cp*(0.5*(
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T+
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T)-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T)/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.cteTiempo else 0));
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_neto[3] := 
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_cond[3]+
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[3]-
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[2];
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].Q_flow := 
    interacumulador_Mezcla_02_1.transmisionCalor1D[1].Q_flow+interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_neto[3];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      (-19.912)*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cv
        *der(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T)
         =  -(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.H_flow
        -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].Q_flow);
      */
      der(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T)
         :=  -(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_b.H_flow
        -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].Q_flow)
        /((-19.912)*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cv);

    // Torn part
  // End of linear system of equations
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].h := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cp*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.H_flow
     := (if semiLinearCondition( -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     >= 0) then  -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].h
    *interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     else  -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].h*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow);
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_cond[2] := 4*(
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.lamda*(
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T)+
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.lamda*(
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T))/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura;
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[1] := 
    noEvent((if interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T > 0
     then interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.cp*(0.5*(
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T+
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T)-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T)/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.cteTiempo else 0));
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].Q_flow := 
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_cond[2]+
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[2]-
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[1];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      (-19.912)*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cv
        *der(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T)
         =  -(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.H_flow
        -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].Q_flow);
      */
      der(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T)
         :=  -(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_b.H_flow
        -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].Q_flow)
        /((-19.912)*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cv);

    // Torn part
  // End of linear system of equations
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.H_flow
     := (if semiLinearCondition(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     >= 0) then sumidero.h*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     else interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].h*
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow);
  interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_cond[1] := 4*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.volumen*
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.medium.lamda*(
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T)/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura/
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.altura;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].Q_flow := 
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_cond[1]+
    interacumulador_Mezcla_02_1.control_Interacumulador_Mezcla.Q_invTemp[1];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      (-19.912)*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cv
        *der(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T)
         =  -(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].Q_flow);
      */
      der(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T)
         :=  -(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_b.H_flow
        +interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].Q_flow)
        /((-19.912)*interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cv);

    // Torn part
  // End of linear system of equations

// -----------------------------------------------------------------------------

// Accepted Section
  when pre(trapezoid.counter2) <> 0 and sample(trapezoid.startTime, 
    trapezoid.period) then
    trapezoid.counter := pre(trapezoid.counter)-(if pre(trapezoid.counter) > 0
     then 1 else 0);
  end when;

// -----------------------------------------------------------------------------

// Conditionally Accepted Section
  sumidero.flowPort.h := (if semiLinearCondition(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     > 0) then sumidero.h else interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].h);
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.h
     := (if semiLinearCondition( -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     > 0) then interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].h
     else interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].h);
  ida.flowPort.h := (if semiLinearCondition(noEvent(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     > 0)) then ida.h else CaudalEntrada.h);
  CaudalEntrada.flowPort_b.h := (if semiLinearCondition(noEvent( -
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     > 0)) then interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].h
     else CaudalEntrada.h);
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.h
     := (if semiLinearCondition(noEvent( -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     > 0)) then interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].h
     else interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].h);
  retorno.flowPort.h := (if semiLinearCondition(noEvent( -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
     > 0)) then retorno.h else interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].h);
  red.flowPort.h := (if semiLinearCondition( -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     > 0) then red.h else interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].h);
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.h
     := (if semiLinearCondition( -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     > 0) then interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].h
     else interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].h);
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.h
     := (if semiLinearCondition( -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].flowPort_a.m_flow
     > 0) then interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].h
     else interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].h);
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].dp :=  -
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].dP_nom*
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
    ^2/(995.6*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].cV_nom)
    ^2;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].dp :=  -
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].dP_nom*
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow
    ^2/(995.6*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].cV_nom)
    ^2;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.p
     := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].dp+
    retorno.p_Ambient;
  CaudalEntrada.flowPort_b.p := interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].dp
    +interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.p;
  CaudalEntrada.dp := ida.p_Ambient-CaudalEntrada.flowPort_b.p;
  CaudalEntrada.T_a := ida.flowPort.h/CaudalEntrada.medium.cp;
  CaudalEntrada.T_b := CaudalEntrada.flowPort_b.h/CaudalEntrada.medium.cp;
  CaudalEntrada.dT := (if noEvent(CaudalEntrada.V_flow >= 0) then 
    CaudalEntrada.T-CaudalEntrada.T_a else CaudalEntrada.T_b-CaudalEntrada.T);
  ida.T_port := ida.flowPort.h/ida.medium.cp;
  retorno.T_port := retorno.flowPort.h/retorno.medium.cp;
  red.T_port := red.flowPort.h/red.medium.cp;
  sumidero.T_port := sumidero.flowPort.h/sumidero.medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T_a := 
    sumidero.flowPort.h/interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T_b := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.h
    /interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].dT := (if 
    noEvent(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].V_flow
     >= 0) then interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T_a else 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T_b-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[1].T);
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T_a := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].flowPort_a.h
    /interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T_b := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.h
    /interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].dT := (if 
    noEvent(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].V_flow
     >= 0) then interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T_a else 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T_b-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[2].T);
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T_a := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].flowPort_a.h
    /interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T_b := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.h
    /interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].dT := (if 
    noEvent(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].V_flow
     >= 0) then interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T_a else 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T_b-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[3].T);
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T_a := 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].flowPort_a.h
    /interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T_b := 
    red.flowPort.h/interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].dT := (if 
    noEvent(interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].V_flow
     >= 0) then interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T
    -interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T_a else 
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T_b-
    interacumulador_Mezcla_02_1.volumenesControl1D.volumenControl[4].T);
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].V_flow
     := 0.00100441944556047*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T_a := 
    CaudalEntrada.flowPort_b.h/interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T_b := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.h
    /interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].dT := (
    if noEvent(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].V_flow
     >= 0) then interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T_a
     else interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T_b
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].T);
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].V_flow
     := 0.00100441944556047*interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[1].flowPort_a.m_flow;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T_a := 
    interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].flowPort_a.h
    /interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T_b := 
    retorno.flowPort.h/interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].medium.cp;
  interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].dT := (
    if noEvent(interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].V_flow
     >= 0) then interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T_a
     else interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T_b
    -interacumulador_Mezcla_02_1.volumenesControl1D_int.volumenControl[2].T);

// -----------------------------------------------------------------------------

// Eliminated alias variables
  // To have eliminated alias variables listed, set
  //   Advanced.OutputModelicaCodeWithAliasVariables = true
  // before translation. May give much output.
